[{"D:\\Clover_Dynamics\\clover_dynamics_task\\src\\index.js":"1","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\reportWebVitals.js":"2","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\App.js":"3","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Photo.jsx":"4","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Load.jsx":"5","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Error.jsx":"6","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Rover.jsx":"7"},{"size":501,"mtime":1612450108223,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":6905,"mtime":1612460008844,"results":"11","hashOfConfig":"9"},{"size":215,"mtime":1612442263181,"results":"12","hashOfConfig":"9"},{"size":207,"mtime":1612457462375,"results":"13","hashOfConfig":"9"},{"size":247,"mtime":1612450685329,"results":"14","hashOfConfig":"9"},{"size":1914,"mtime":1612452069927,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ia6p5l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"D:\\Clover_Dynamics\\clover_dynamics_task\\src\\index.js",[],["34","35"],"D:\\Clover_Dynamics\\clover_dynamics_task\\src\\reportWebVitals.js",[],"D:\\Clover_Dynamics\\clover_dynamics_task\\src\\App.js",["36","37","38"],"import s from \"./App.module.scss\";\nimport Curiosity from \"./Img/curiosity.jpg\";\nimport Opportunity from \"./Img/Opportunity.jpg\";\nimport Spirit from \"./Img/Spirit.jpg\";\nimport Axios from \"axios\";\nimport { useState } from \"react\";\nimport Photo from \"./Components/Photo\";\nimport Load from \"./Components/Load\";\nimport ErrorComponent from \"./Components/Error\";\nimport Rover from \"./Components/Rover\";\nfunction App(props) {\n  const [photos, setPhotos] = useState([]);\n  const [Length, setLength] = useState(12);\n  function chooseRover(e) {\n    let SelectedRover = document.getElementById(\"SelectedRover\");\n    let RoverImg = document.getElementById(\"RoverImg\");\n    let RoverName = document.getElementById(\"RoverName\");\n    let RoverBlock = document.getElementById(\"RoverBlock\");\n    let target = e.currentTarget;\n    let ParentArray = target.parentElement.children;\n    RoverImg.src = ParentArray[0].src;\n    RoverName.innerHTML = ParentArray[1].innerHTML;\n    RoverBlock.style.display = \"none\";\n    SelectedRover.style.display = \"grid\";\n  }\n  function change() {\n    setPhotos([]);\n    let load = document.getElementById(\"Load\");\n    let block = document.getElementById(\"PhotosBlock\");\n    load.style.display = \"none\";\n    block.style.display = \"none\";\n  }\n  function roverReturn() {\n    let load = document.getElementById(\"Load\");\n    let camera = document.getElementById(\"camera\");\n    let sol = document.getElementById(\"solInput\");\n    let SelectedRover = document.getElementById(\"SelectedRover\");\n    let RoverBlock = document.getElementById(\"RoverBlock\");\n    let block = document.getElementById(\"PhotosBlock\");\n    let photoError1 = document.getElementById(\"Error1\");\n    let photoError2 = document.getElementById(\"Error2\");\n    let photoError3 = document.getElementById(\"Error3\");\n\n    camera.value = \"None\";\n    sol.value = \"\";\n    load.style.display = \"none\";\n    block.style.display = \"none\";\n    photoError1.style.display = \"none\";\n    photoError2.style.display = \"none\";\n    photoError3.style.display = \"none\";\n    SelectedRover.style.display = \"none\";\n    RoverBlock.style.display = \"grid\";\n    setPhotos([]);\n  }\n  function loadMore() {\n    if (Length + 4 >= photos.length) {\n      let load = document.getElementById(\"Load\");\n      load.style.display = \"none\";\n    } else {\n      setLength(Length + 4);\n    }\n  }\n  function SendRequest(event) {\n    let block = document.getElementById(\"PhotosBlock\");\n    let photoError1 = document.getElementById(\"Error1\");\n    let photoError2 = document.getElementById(\"Error2\");\n    let photoError3 = document.getElementById(\"Error3\");\n    let name = document.getElementById(\"RoverName\");\n    let camera = document.getElementById(\"camera\");\n    let sol = document.getElementById(\"solInput\");\n    let load = document.getElementById(\"Load\");\n\n    if (window.innerWidth > 800) {\n      window.scrollBy(0, event.clientY + 50);\n    } else if (window.innerWidth > 500 && window.innerWidth < 800) {\n      window.scrollBy(0, event.clientY + 30);\n    } else if (window.innerWidth < 500) {\n      window.scrollBy(0, event.clientY + 20);\n    }\n    if (camera.value !== \"None\") {\n      if (!isNaN(sol.value)) {\n        Axios.get(\n          `https://api.nasa.gov/mars-photos/api/v1/rovers/${\n            name.innerHTML\n          }/photos?sol=${Number.parseInt(sol.value)}&camera=${\n            camera.value\n          }&api_key=rHOBuDjqX5lc2JJc2TDc2nJBc2hZbT08qNXlb0Gv`\n        ).then((Response) => {\n          setPhotos(Response.data.photos);\n          if (Response.data.photos.length > 12) {\n            load.style.display = \"grid\";\n          }\n          if (Response.data.photos.length > 0) {\n            photoError1.style.display = \"none\";\n            photoError2.style.display = \"none\";\n            photoError3.style.display = \"none\";\n            block.style.display = \"inline\";\n          } else {\n            block.style.display = \"none\";\n            photoError2.style.display = \"none\";\n            photoError3.style.display = \"none\";\n            photoError1.style.display = \"inline\";\n          }\n        });\n      } else {\n        block.style.display = \"none\";\n        photoError2.style.display = \"inline\";\n        photoError1.style.display = \"none\";\n        photoError3.style.display = \"none\";\n      }\n    } else {\n      block.style.display = \"none\";\n      photoError1.style.display = \"none\";\n      photoError2.style.display = \"none\";\n      photoError3.style.display = \"inline\";\n    }\n  }\n\n  let newArray = photos.slice(0, Length);\n  let Photos = newArray.map((p) => <Photo key={p.id} src={p.img_src} />);\n  return (\n    <div className={s.App}>\n      <div className={s.MarsTheme}></div>\n      <div className={s.RoverBlockContainer} id=\"RoverBlock\">\n        <div className={s.RoverBlockTitle}>\n          <div className={s.LineTextBlock}>\n            <div className={s.LineText}>Select Rover</div>\n          </div>\n        </div>\n        <div className={s.RoverBlock}>\n          <div className={s.Rover1}>\n            <img className={s.RoverBlockImg} src={Curiosity} />\n            <div className={s.RoverBlockName}>Curiosity</div>\n            <button className={s.RoverBlockButton} onClick={chooseRover}>\n              Select\n            </button>\n          </div>\n          <div className={s.Rover2}>\n            <img className={s.RoverBlockImg} src={Opportunity} />\n            <div className={s.RoverBlockName}>Opportunity</div>\n            <button className={s.RoverBlockButton} onClick={chooseRover}>\n              Select\n            </button>\n          </div>\n          <div className={s.Rover3}>\n            <img className={s.RoverBlockImg} src={Spirit} />\n            <div className={s.RoverBlockName}>Spirit</div>\n\n            <button className={s.RoverBlockButton} onClick={chooseRover}>\n              Select\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <Rover\n        SendRequest={SendRequest}\n        roverReturn={roverReturn}\n        change={change}\n      />\n\n      <div className={s.ErrorContainer} id=\"Error1\">\n        <ErrorComponent\n          text={`Data on your request does not exist\n        (possibly the rover does not have this sol day or this type of\"`}\n        />\n      </div>\n      <div className={s.ErrorContainer} id=\"Error2\">\n        <ErrorComponent text={\"Sol day must be number\"} />\n      </div>\n      <div className={s.ErrorContainer} id=\"Error3\">\n        <ErrorComponent text={\"Camera can't be NONE\"} />\n      </div>\n      <div className={s.PhotosContainer} id=\"PhotosBlock\">\n        <div className={s.PhotosBlockContainer}>\n          <div className={s.PhotoBlockTitle}>Photos of Mars </div>\n          <div className={s.PhotosBlock}>\n            <div className={s.Photos}>\n              <div> {Photos}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={s.LoadBlock} id=\"Load\">\n        <Load loadMore={loadMore} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Photo.jsx",["39"],"\r\n\r\n\r\nimport s from \"../Style/Photo.module.scss\"\r\n\r\n\r\nconst Photo=(props)=>{\r\n    return(\r\n        <div className={s.PhotoBlock}>\r\n            <img src={props.src}/>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Photo","D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Load.jsx",[],"D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Error.jsx",[],"D:\\Clover_Dynamics\\clover_dynamics_task\\src\\Components\\Rover.jsx",["40"],"import s from \"../Style/rover.module.scss\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst Rover = (props) => {\r\n  return (\r\n    <div className={s.SelectedRover} id=\"SelectedRover\">\r\n      <div className={s.Rover}>\r\n        <img className={s.RoverImg} src=\"\" id=\"RoverImg\" />\r\n        <div className={s.RoverInfo}>\r\n          <div className={s.RoverName} id=\"RoverName\">\r\n            {\" \"}\r\n          </div>\r\n          <div className={s.RoverProperty}>\r\n            <div className={s.RoverCameras}>\r\n              <div className={s.CameraTitle}>Choose a camera</div>\r\n              <select className={s.Camera} id=\"camera\" onChange={props.change}>\r\n                <option>None</option>\r\n                <option>FHAZ</option>\r\n                <option>RHAZ</option>\r\n                <option>MAST</option>\r\n                <option>CHEMCAM</option>\r\n                <option>MAHLI</option>\r\n                <option>MARDI</option>\r\n                <option>NAVCAM</option>\r\n                <option>PANCAM</option>\r\n                <option>MINITES</option>\r\n              </select>\r\n            </div>\r\n            <div className={s.SolDay}>\r\n              <div className={s.SolDayTitle}>Input Sol Day</div>\r\n              <input\r\n                className={s.SolDayInput}\r\n                id=\"solInput\"\r\n                onChange={props.change}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <button className={s.ShowButton} onClick={props.SendRequest}>\r\n            Show\r\n          </button>\r\n        </div>\r\n        <div className={s.Arrow}>\r\n          <ArrowBackIcon\r\n            className={s.ArrowIcon}\r\n            onClick={props.roverReturn}\r\n          ></ArrowBackIcon>\r\n          <span className={s.ArrowTitle} onClick={props.roverReturn}>\r\n            Return to Rovers\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Rover;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":132,"column":13,"nodeType":"47","endLine":132,"endColumn":64},{"ruleId":"45","severity":1,"message":"46","line":139,"column":13,"nodeType":"47","endLine":139,"endColumn":66},{"ruleId":"45","severity":1,"message":"46","line":146,"column":13,"nodeType":"47","endLine":146,"endColumn":61},{"ruleId":"45","severity":1,"message":"46","line":10,"column":13,"nodeType":"47","endLine":10,"endColumn":35},{"ruleId":"45","severity":1,"message":"46","line":8,"column":9,"nodeType":"47","endLine":8,"endColumn":60},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]